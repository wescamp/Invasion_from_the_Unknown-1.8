#textdomain wesnoth-Invasion_from_the_Unknown
# $Id$

#define MAP _NAME
    {EX_ATTRIBUTE map_data ("{INCLUDE_LOCAL /maps/{_NAME}}")}

    {WORKAROUNDS}
#enddef

#define MASK _NAME
    {EX_ATTRIBUTE mask ("{INCLUDE_LOCAL /masks/{_NAME}}")}
#enddef

#define SHROUD_DATA _NAME
    {EX_ATTRIBUTE shroud_data ("{INCLUDE_LOCAL /masks/{_NAME}}")}
#enddef

# wmllint: validate-on

#define NO_RECALLS
    disallow_recall=yes
#enddef

#define __ENDLEVEL_SHARED
    # Redraw display area
    {REDRAW}
    # Store hero's side colour, TC map and standing frame file path
    # Used in IftU's StoryWML
    [if]
        [have_unit]
            id=Galas
        [/have_unit]
        [then]
            {CLEAR_VARIABLE storymap_heroicon}
            [store_unit]
                [filter]
                    id=Galas
                [/filter]
                variable=__heroprobe
                kill=no
            [/store_unit]
            [store_side]
                side=$__heroprobe.side
                variable=__herosideprobe
            [/store_side]
            {VARIABLE storymap_heroicon ("$__heroprobe.image|~RC($__heroprobe.flag_rgb|>$__herosideprobe.colour|)")}
            {CLEAR_VARIABLE __heroprobe}
            {CLEAR_VARIABLE __herosideprobe}
        [/then]
    [/if]
#enddef

#define OVERRIDE_NEXT_SCENARIO _ID
    [+endlevel]
        next_scenario={_ID}
    [/endlevel]
#enddef

#define OVERRIDE_CARRYOVER_PERCENTAGE _VALUE
    [+endlevel]
        carryover_percentage={_VALUE}
    [/endlevel]
#enddef

#define ENDLEVEL_VICTORY _BONUS
    {__ENDLEVEL_SHARED}
    [endlevel]
        result=victory
        bonus={_BONUS}
        save=yes
        linger_mode=yes
    [/endlevel]
#enddef

#define ENDLEVEL_CONTINUE
    {__ENDLEVEL_SHARED}
    [endlevel]
        result=victory
        bonus=no
        save=yes
        linger_mode=no
        carryover_percentage=100
        carryover_report=no
        music=silence.ogg
    [/endlevel]
#enddef

#define ENDLEVEL_QUIET
    {__ENDLEVEL_SHARED}
    [endlevel]
        result=victory
        bonus=no
        save=no
        linger_mode=no
        carryover_percentage=100
        carryover_report=no
    [/endlevel]
#enddef

#define ENDLEVEL_DEFEAT
    {__ENDLEVEL_SHARED}
    [endlevel]
        result=defeat
    [/endlevel]
#enddef

#define CAPTURE_VILLAGE _SIDE _X _Y
    [capture_village]
        side={_SIDE}
        x={_X}
        y={_Y}
    [/capture_village]
#enddef

#define RETRIEVE_GOLD _AMOUNT
    [sound]
        name=gold.ogg
    [/sound]
    # It's mandatory to use a variable instead of a macro, as the latter causes the resultant text
    # not to be matched in the gettext source.
    {VARIABLE temp_gold_retrieval_amount ({_AMOUNT})}
    [message]
        speaker=narrator
        image="items/gold-coins-medium.png"
        message= _ "You retrieve $temp_gold_retrieval_amount pieces of gold."
    [/message]
    [gold]
        side=1
        amount=$temp_gold_retrieval_amount
    [/gold]
    {CLEAR_VARIABLE temp_gold_retrieval_amount}
#enddef

#define RECEIVE_GOLD _AMOUNT
    [sound]
        name=gold.ogg
    [/sound]
    # It's mandatory to use a variable instead of a macro, as the latter causes the resultant text
    # not to be matched in the gettext source.
    {VARIABLE temp_gold_retrieval_amount ({_AMOUNT})}
    [message]
        speaker=narrator
        image="items/gold-coins-medium.png"
        message= _ "You receive $temp_gold_retrieval_amount pieces of gold!"
    [/message]
    [gold]
        side=1
        amount=$temp_gold_retrieval_amount
    [/gold]
    {CLEAR_VARIABLE temp_gold_retrieval_amount}
#enddef

#define ADD_GOLD _SIDE _ONEASY _ONMEDIUM _ONHARD
    [gold]
        side={_SIDE}
        {QUANTITY amount {_ONEASY} {_ONMEDIUM} {_ONHARD} }
    [/gold]
#enddef

#define SET_GOLD _SIDE _ONEASY _ONMEDIUM _ONHARD
    [modify_side]
        side={_SIDE}
        {QUANTITY gold {_ONEASY} {_ONMEDIUM} {_ONHARD} }
    [/modify_side]
#enddef

#define SCROLL_TO_UNIT _ID
    [scroll_to_unit]
        id={_ID}
    [/scroll_to_unit]
#enddef

#define SET_RECRUIT_LIST _SIDE _LIST
    [modify_side]
        side={_SIDE}
        recruit={_LIST}
    [/modify_side]
#enddef

#define REMOVE_RECRUIT_LIST _SIDE
    [set_recruit]
        side={_SIDE}
        recruit=""
    [/set_recruit]
#enddef

# Note: using [modify_side] to edit various side stats at once is recommended
# now that it's available (v1.3.11)
#define ALLOW_RECRUIT _SIDE _LIST
    [allow_recruit]
        side={_SIDE}
        type={_LIST}
    [/allow_recruit]
#enddef

#define DISALLOW_RECRUIT _SIDE _LIST
    [disallow_recruit]
        side={_SIDE}
        type={_LIST}
    [/disallow_recruit]
#enddef

#define HEADER_NEW_OBJECTIVES
    summary= _ "New objectives:"
#enddef
#define HEADER_CURRENT_OBJECTIVES
    summary= _ "Current objectives:"
#enddef
#define HEADER_INITIAL_OBJECTIVES
    summary= _ "Initial objectives:"
#enddef

#define OBJECTIVE_NOTES _NOTES_TEXT
    note="<b>" + _ "Scenario notes:" + "</b>
"+{_NOTES_TEXT}
#enddef

#define OBJECTIVE_TO_WIN _DESCRIPTION
    [objective]
        description={_DESCRIPTION}
        condition=win
    [/objective]
#enddef

#define OBJECTIVE_TO_WIN_COMPLETE _DESCRIPTION
    [objective]
        description="<s>"+{_DESCRIPTION}+"</s>"
        condition=win
    [/objective]
#enddef

#define OBJECTIVE_OR
    [objective]
        description="<span color='#ffffff'><small>"+_"or"+"</small></span>"
        condition=win
    [/objective]
#enddef

#define OBJECTIVE_TO_BONUS _DESCRIPTION
    [objective]
        description="<span color='{PANGO_COLOR_BONUS}'>"+{_DESCRIPTION}+"</span>"
        condition=win
    [/objective]
#enddef

#define OBJECTIVE_TO_BONUS_COMPLETE _DESCRIPTION
    [objective]
        description="<span color='{PANGO_COLOR_BONUS}'><s>"+{_DESCRIPTION}+"</s></span>"
        condition=win
    [/objective]
#enddef

#define OBJECTIVE_TO_LOSE _DESCRIPTION
    [objective]
        description={_DESCRIPTION}
        condition=lose
    [/objective]
#enddef

#define SET_OBJECTIVES _SIDE _CONTENTS
    [objectives]
        side={_SIDE}
        {_CONTENTS}
    [/objectives]
#enddef

#define SIGHTED_SUF_BY_PLAYER _SPOTTED_UNIT_SUF
    name=sighted
    [filter]
        {_SPOTTED_UNIT_SUF}
    [/filter]
    [filter_second]
        side=1
    [/filter_second]
    {REDRAW}
#enddef

#define SIGHTED_SUF_BY_SIDE _SPOTTED_UNIT_SUF _SPOTTER_SIDE_NUM
    name=sighted
    [filter]
        {_SPOTTED_UNIT_SUF}
    [/filter]
    [filter_second]
        side={_SPOTTER_SIDE_NUM}
    [/filter_second]
    {REDRAW}
#enddef

#
# Fires a custom event when stumbling upon a unit matching the
# specified filter for the first time. The custom event should
# be a one-time-only event or weird things may happen.
#
# The unit stumbled upon will be the secondary unit for the
# custom event handler, while the player unit becomes the primary
# unit.
#
#define FIRE_EVENT_ON_STUMBLE_UPON _EVT_ID _SUF
    [event]
        name=sighted
        [filter]
            {_SUF}
        [/filter]
        [filter_second]
            side=1
        [/filter_second]
        [redraw][/redraw]
        [fire_event]
            name={_EVT_ID}
            [primary_unit]
                x,y=$x2,$y2
            [/primary_unit]
            [secondary_unit]
                x,y=$x1,$y1
            [/secondary_unit]
        [/fire_event]
    [/event]
    [event]
        name=sighted
        [filter]
            side=1
        [/filter]
        [filter_second]
            {_SUF}
        [/filter_second]
        [redraw][/redraw]
        [fire_event]
            name={_EVT_ID}
            [primary_unit]
                x,y=$x1,$y1
            [/primary_unit]
            [secondary_unit]
                x,y=$x2,$y2
            [/secondary_unit]
        [/fire_event]
    [/event]
    [event]
        name=attack
        [filter]
            {_SUF}
        [/filter]
        [filter_second]
            side=1
        [/filter_second]
        [fire_event]
            name={_EVT_ID}
            [primary_unit]
                x,y=$x2,$y2
            [/primary_unit]
            [secondary_unit]
                x,y=$x1,$y1
            [/secondary_unit]
        [/fire_event]
    [/event]
    [event]
        name=attack
        [filter]
            side=1
        [/filter]
        [filter_second]
            {_SUF}
        [/filter_second]
        [fire_event]
            name={_EVT_ID}
            [primary_unit]
                x,y=$x1,$y1
            [/primary_unit]
            [secondary_unit]
                x,y=$x2,$y2
            [/secondary_unit]
        [/fire_event]
    [/event]
#enddef

#define PLAYER_RECRUITMENT_SETUP_FOR_SCENARIO _SID
    {VARIABLE temp_sid {_SID} }
    [if]
        {VARIABLE_NUM_EQUALS temp_sid 4}
        [then]
            {DISALLOW_RECRUIT 1 "Elvish Scout"}
            {ALLOW_RECRUIT 1 "Elvish Scout scenario4"}
        [/then]
        [else]
            [if]
                {VARIABLE_NUM_LESS_THAN temp_sid 19}
                {VARIABLE_NUM_GREATER_THAN temp_sid 4}
                [then]
                    {DISALLOW_RECRUIT 1 "Elvish Civilian,Elvish Hunter,Elvish Archer,Elvish Shaman,Elvish Scout,Elvish Fighter,Elvish Scout scenario4"}
                    {VARIABLE temp_prs_norecruit_list ""}
                    {VARIABLE temp_prs_clone_suffix "scenario$temp_sid"}
                    {FOR i 5 (less_than_equal_to=18) 1 (
                        [if]
                            {VARIABLE_NUM_EQUALS i 5}
                            [else]
                                {VARIABLE temp_prs_norecruit_list "$temp_prs_norecruit_list|,"}
                            [/else]
                        [/if]
                        {VARIABLE temp_prs_norecruit_list "$temp_prs_norecruit_list|Elvish Hunter scenario$i|,"}
                        {VARIABLE temp_prs_norecruit_list "$temp_prs_norecruit_list|Elvish Archer scenario$i|,"}
                        {VARIABLE temp_prs_norecruit_list "$temp_prs_norecruit_list|Elvish Civilian scenario$i|,"}
                        {VARIABLE temp_prs_norecruit_list "$temp_prs_norecruit_list|Elvish Shaman scenario$i|,"}
                        {VARIABLE temp_prs_norecruit_list "$temp_prs_norecruit_list|Elvish Scout scenario$i|,"}
                        {VARIABLE temp_prs_norecruit_list "$temp_prs_norecruit_list|Elvish Fighter scenario$i"}
                    )}
                    {DISALLOW_RECRUIT 1 "$temp_prs_norecruit_list"}
                    {VARIABLE temp_prs_recruit_list "$temp_prs_recruit_list|Elvish Hunter $temp_prs_clone_suffix|,"}
                    {VARIABLE temp_prs_recruit_list "$temp_prs_recruit_list|Elvish Archer $temp_prs_clone_suffix|,"}
                    {VARIABLE temp_prs_recruit_list "$temp_prs_recruit_list|Elvish Civilian $temp_prs_clone_suffix|,"}
                    {VARIABLE temp_prs_recruit_list "$temp_prs_recruit_list|Elvish Shaman $temp_prs_clone_suffix|,"}
                    {VARIABLE temp_prs_recruit_list "$temp_prs_recruit_list|Elvish Scout $temp_prs_clone_suffix|,"}
                    {VARIABLE temp_prs_recruit_list "$temp_prs_recruit_list|Elvish Fighter $temp_prs_clone_suffix"}
                    {ALLOW_RECRUIT 1 "$temp_prs_recruit_list"}

                    {CLEAR_VARIABLE temp_prs_norecruit_list}
                    {CLEAR_VARIABLE temp_prs_recruit_list}
                    {CLEAR_VARIABLE temp_prs_clone_suffix}
                [/then]
            [/if]
        [/else]
    [/if]
    {CLEAR_VARIABLE temp_sid}
#enddef

#define PER_VILLAGE_INCOME _INCOME
    village_gold={_INCOME}
#enddef

#define DOOR_TILES_TO_UNITS _SIDE
    # Generate door locations from the map; hardcoding would be faster at runtime,
    # but this method makes it easier and faster for me to write the WML :-)
    [store_locations]
        terrain="*^Z\"
        [or]
            terrain="*^Z/"
        [/or]
        variable=door_tilemap_store
    [/store_locations]
    {FOREACH door_tilemap_store k}
        [unit]
            side={_SIDE}
            [modifications]
                {TRAIT_MECHANICAL}
            [/modifications]
            type=Door
            x=$door_tilemap_store[$k].x
            y=$door_tilemap_store[$k].y
            id=door_at_x$door_tilemap_store[$k].x|_y$door_tilemap_store[$k].y|
        [/unit]
    {NEXT k}
    {CLEAR_VARIABLE door_tilemap_store}
#enddef
